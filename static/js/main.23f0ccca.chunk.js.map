{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","visibleTodos","setIsModalOpen","setSelectTodo","selectTodo","className","map","todo","cn","id","completed","title","onClick","openModal","type","TodoFilter","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","selectUser","setSelectUser","useEffect","userId","user","href","email","name","App","setVisibleTodos","isModalOpen","todos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23f0ccca.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  visibleTodos: Todo[],\n  setIsModalOpen: (value: boolean) => void,\n  setSelectTodo: (todo: Todo) => void\n  selectTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  visibleTodos,\n  setIsModalOpen,\n  setSelectTodo,\n  selectTodo,\n}) => {\n  const openModal = (todo: Todo) => {\n    setIsModalOpen(true);\n    setSelectTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map((todo) => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': todo.id === selectTodo?.id,\n              })}\n              key={todo.id}\n            >\n\n              <td className=\"is-vcentered\">\n                {todo.id}\n              </td>\n\n              {todo.completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )\n                : (<td className=\"is-vcentered\" />)}\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={cn(\n                    {\n                      'has-text-success': todo.completed,\n                      'has-text-danger': !todo.completed,\n                    },\n                  )}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  onClick={() => openModal(todo)}\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={cn('far', {\n                        'fa-eye': true,\n                        'fa-eye-slash': todo.id === selectTodo?.id,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n\n        {/* <tr data-cy=\"todo\" className=\"has-background-info-light\"> */}\n        {/*   <td className=\"is-vcentered\">2</td> */}\n        {/*   <td className=\"is-vcentered\" /> */}\n        {/*   <td className=\"is-vcentered is-expanded\"> */}\n        {/*     <p className=\"has-text-danger\"> */}\n        {/*       quis ut nam facilis et officia qui */}\n        {/*     </p> */}\n        {/*   </td> */}\n        {/*   <td className=\"has-text-right is-vcentered\"> */}\n        {/*     <button */}\n        {/*       data-cy=\"selectButton\" */}\n        {/*       className=\"button\" */}\n        {/*       type=\"button\" */}\n        {/*     > */}\n        {/*       <span className=\"icon\"> */}\n        {/*         <i className=\"far fa-eye-slash\" /> */}\n        {/*       </span> */}\n        {/*     </button> */}\n        {/*   </td> */}\n        {/* </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","export const TodoFilter = () => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { PreparedTodo } from '../../types/PreparedTodos';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectTodo: PreparedTodo | null,\n  setIsModalOpen: (value: boolean) => void,\n  setSelectTodo: (todo: Todo | null) => void\n};\nexport const TodoModal: React.FC<Props> = ({\n  selectTodo,\n  setSelectTodo,\n  setIsModalOpen,\n}) => {\n  const [selectUser, setSelectUser] = useState<User | null>(null);\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectUser(null);\n    setSelectTodo(null);\n  };\n\n  useEffect(() => {\n    getUser(selectTodo?.userId || 0)\n      .then((user) => setSelectUser(user));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={() => closeModal()}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectUser.email}`}>\n                {selectUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { PreparedTodo } from './types/PreparedTodos';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectTodo, setSelectTodo] = useState<PreparedTodo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(todos => setVisibleTodos(todos));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length > 0 ? (\n                <TodoList\n                  selectTodo={selectTodo}\n                  visibleTodos={visibleTodos}\n                  setIsModalOpen={setIsModalOpen}\n                  setSelectTodo={setSelectTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalOpen && (\n        <TodoModal\n          setSelectTodo={setSelectTodo}\n          selectTodo={selectTodo}\n          setIsModalOpen={setIsModalOpen}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}