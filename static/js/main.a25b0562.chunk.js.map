{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","types/TodoStatus.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","components/utils/getFilteredTodos.tsx","index.tsx"],"names":["TodoItem","_ref","isSelectedTodo","currentTodo","todo","setSelectTodo","_jsxs","className","cn","children","_jsx","id","completed","title","onClick","type","TodoList","visibleTodos","selectTodo","map","TodoStatus","TodoFilter","setSelectFilter","selectFilter","setFilterField","filterField","value","onChange","e","target","Object","values","option","event","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","_useState","useState","_useState2","_slicedToArray","selectedUser","setSelectedUser","_useState3","_useState4","isLoading","setIsLoading","useEffect","userId","concat","user","catch","console","log","finally","href","email","name","App","setVisibleTodos","selectedTodo","setSelectedTodo","_useState5","All","_useState6","todoStatusFilter","setTodoStatusFilter","_useState7","_useState8","searchQuery","setSearchQuery","_useState9","_useState10","filteredTodos","useMemo","_toConsumableArray","filter","toLowerCase","includes","trim","Active","Completed","getFilteredTodos","_Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a25b0562.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  isSelectedTodo: boolean,\n  todo: Todo,\n  setSelectTodo: (todo: Todo) => void\n};\nexport const TodoItem: React.FC<Props> = ({\n  isSelectedTodo,\n  todo: currentTodo,\n  setSelectTodo,\n}) => {\n  const openModal = (todo: Todo) => {\n    setSelectTodo(todo);\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': isSelectedTodo,\n      })}\n      key={currentTodo.id}\n    >\n      <td className=\"is-vcentered\">\n        {currentTodo.id}\n      </td>\n\n      {currentTodo.completed ? (\n        <td className=\"is-vcentered\">\n          <span\n            className=\"icon\"\n            data-cy=\"iconCompleted\"\n          >\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n      ) : (\n        <td\n          aria-label=\"icon is clicked\"\n          className=\"is-vcentered\"\n        />\n      )}\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn(\n            {\n              'has-text-success': currentTodo.completed,\n              'has-text-danger': !currentTodo.completed,\n            },\n          )}\n        >\n          {currentTodo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          onClick={() => openModal(currentTodo)}\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          aria-label=\"View Todo\"\n        >\n          <span className=\"icon\">\n            <i\n              className={cn('far', {\n                'fa-eye': !isSelectedTodo,\n                'fa-eye-slash': isSelectedTodo,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  visibleTodos: Todo[],\n  setSelectTodo: (todo: Todo) => void\n  selectTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  visibleTodos,\n  setSelectTodo,\n  selectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map((todo) => {\n          const isSelectedTodo = todo.id === selectTodo?.id;\n\n          return (\n            <TodoItem\n              setSelectTodo={setSelectTodo}\n              isSelectedTodo={isSelectedTodo}\n              todo={todo}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","export enum TodoStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport { TodoStatus } from '../../types/TodoStatus';\n\ntype Props = {\n  selectFilter: TodoStatus,\n  setSelectFilter: (sortStatus: TodoStatus) => void\n  setFilterField: (e: string) => void;\n  filterField: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setSelectFilter,\n  selectFilter,\n  setFilterField,\n  filterField,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            className=\"is-capitalized\"\n            value={selectFilter}\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              setSelectFilter(e.target.value as TodoStatus);\n            }}\n          >\n            {Object.values(TodoStatus).map(option => (\n              <option\n                className=\"is-capitalized\"\n                key={option}\n                value={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={filterField}\n          onChange={(event) => setFilterField(event.target.value)}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {filterField && (\n            <button\n              onClick={() => setFilterField('')}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"reset field\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectTodo: Todo | null,\n  setSelectTodo: (todo: Todo | null) => void\n};\nexport const TodoModal: React.FC<Props> = ({\n  selectTodo,\n  setSelectTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const closeModal = () => {\n    setSelectedUser(null);\n    setSelectTodo(null);\n  };\n\n  useEffect(() => {\n    if (selectTodo?.userId) {\n      setIsLoading(true);\n      getUser(selectTodo?.userId)\n        .then((user) => setSelectedUser(user))\n        .catch(() => {\n          // eslint-disable-next-line\n          console.log('Error loading todos')\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={closeModal}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { TodoStatus } from './types/TodoStatus';\nimport { getFilteredTodos } from './components/utils/getFilteredTodos';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todoStatusFilter, setTodoStatusFilter] = useState(TodoStatus.All);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos().then(setVisibleTodos)\n      .catch(() => {\n        // eslint-disable-next-line\n        console.log('Error loading todos')\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return getFilteredTodos(visibleTodos, searchQuery, todoStatusFilter);\n  }, [searchQuery, todoStatusFilter, visibleTodos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterField={searchQuery}\n                setFilterField={setSearchQuery}\n                selectFilter={todoStatusFilter}\n                setSelectFilter={setTodoStatusFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  selectTodo={selectedTodo}\n                  visibleTodos={filteredTodos}\n                  setSelectTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          setSelectTodo={setSelectedTodo}\n          selectTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { TodoStatus } from '../../types/TodoStatus';\nimport { Todo } from '../../types/Todo';\n\nexport function getFilteredTodos(\n  visibleTodos: Todo[],\n  filterField : string,\n  selectFilter: TodoStatus | null,\n) {\n  let filteredTodos = [...visibleTodos];\n\n  if (filterField) {\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title\n        .toLowerCase()\n        .includes(filterField.toLowerCase().trim()));\n  }\n\n  switch (selectFilter) {\n    case TodoStatus.Active:\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n      break;\n\n    case TodoStatus.Completed:\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n      break;\n\n    default:\n      return filteredTodos;\n  }\n\n  return filteredTodos;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}