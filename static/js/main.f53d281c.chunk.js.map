{"version":3,"sources":["components/TodoList/TodoList.tsx","types/TodoStatus.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","components/utils/filterTodos.tsx","index.tsx"],"names":["TodoList","_ref","visibleTodos","setSelectTodo","selectTodo","_jsxs","className","children","_jsx","map","todo","isSelectedTodo","id","cn","completed","title","onClick","openModal","type","TodoStatus","TodoFilter","setSelectFilter","selectFilter","setFilterField","filterField","value","onChange","e","target","Object","values","option","event","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","_useState","useState","_useState2","_slicedToArray","selectedUser","setSelectedUser","_useState3","_useState4","isLoading","setIsLoading","useEffect","userId","concat","user","catch","console","log","finally","href","email","name","App","setVisibleTodos","_useState5","All","_useState6","_useState7","_useState8","_useState9","_useState10","filteredTodos","useMemo","_toConsumableArray","filter","toLowerCase","includes","trim","Active","Completed","filterTodos","_Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f53d281c.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  visibleTodos: Todo[],\n  setSelectTodo: (todo: Todo) => void\n  selectTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  visibleTodos,\n  setSelectTodo,\n  selectTodo,\n}) => {\n  const openModal = (todo: Todo) => {\n    setSelectTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map((todo) => {\n          const isSelectedTodo = todo.id === selectTodo?.id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': isSelectedTodo,\n              })}\n              key={todo.id}\n            >\n\n              <td className=\"is-vcentered\">\n                {todo.id}\n              </td>\n\n              {todo.completed ? (\n                <td className=\"is-vcentered\">\n                  <span\n                    className=\"icon\"\n                    data-cy=\"iconCompleted\"\n                  >\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td\n                  aria-label=\"icon is clicked\"\n                  className=\"is-vcentered\"\n                />\n              )}\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={cn(\n                    {\n                      'has-text-success': todo.completed,\n                      'has-text-danger': !todo.completed,\n                    },\n                  )}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  onClick={() => openModal(todo)}\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  aria-label=\"View Todo\"\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={cn('far', {\n                        'fa-eye': !isSelectedTodo,\n                        'fa-eye-slash': isSelectedTodo,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","export enum TodoStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport { TodoStatus } from '../../types/TodoStatus';\n\ntype Props = {\n  selectFilter: TodoStatus,\n  setSelectFilter: (sortStatus: TodoStatus) => void\n  setFilterField: (e: string) => void;\n  filterField: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setSelectFilter,\n  selectFilter,\n  setFilterField,\n  filterField,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            className=\"is-capitalized\"\n            value={selectFilter}\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              setSelectFilter(e.target.value as TodoStatus);\n            }}\n          >\n            {Object.values(TodoStatus).map(option => (\n              <option\n                className=\"is-capitalized\"\n                key={option}\n                value={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={filterField}\n          onChange={(event) => setFilterField(event.target.value)}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {filterField && (\n            <button\n              onClick={() => setFilterField('')}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"reset field\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectTodo: Todo | null,\n  setSelectTodo: (todo: Todo | null) => void\n};\nexport const TodoModal: React.FC<Props> = ({\n  selectTodo,\n  setSelectTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const closeModal = () => {\n    setSelectedUser(null);\n    setSelectTodo(null);\n  };\n\n  useEffect(() => {\n    if (selectTodo?.userId) {\n      setIsLoading(true);\n      getUser(selectTodo?.userId)\n        .then((user) => setSelectedUser(user))\n        .catch(() => {\n          // eslint-disable-next-line\n          console.log('Error loading todos')\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={closeModal}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { TodoStatus } from './types/TodoStatus';\nimport { filterTodos } from './components/utils/filterTodos';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectTodo, setSelectTodo] = useState<Todo | null>(null);\n  const [selectFilter, setSelectFilter] = useState(TodoStatus.All);\n  const [filterField, setFilterField] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos().then(setVisibleTodos)\n      .catch(() => {\n        // eslint-disable-next-line\n        console.log('Error loading todos')\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return filterTodos(visibleTodos, filterField, selectFilter);\n  }, [filterField, selectFilter, visibleTodos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterField={filterField}\n                setFilterField={setFilterField}\n                selectFilter={selectFilter}\n                setSelectFilter={setSelectFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  selectTodo={selectTodo}\n                  visibleTodos={filteredTodos}\n                  setSelectTodo={setSelectTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectTodo && (\n        <TodoModal\n          setSelectTodo={setSelectTodo}\n          selectTodo={selectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { TodoStatus } from '../../types/TodoStatus';\nimport { Todo } from '../../types/Todo';\n\nexport function filterTodos(\n  visibleTodos: Todo[],\n  filterField : string,\n  selectFilter: TodoStatus | null,\n) {\n  let filteredTodos = [...visibleTodos];\n\n  if (filterField) {\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title\n        .toLowerCase()\n        .includes(filterField.toLowerCase().trim()));\n  }\n\n  switch (selectFilter) {\n    case TodoStatus.Active:\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n      break;\n\n    case TodoStatus.Completed:\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n      break;\n\n    default:\n      return filteredTodos;\n  }\n\n  return filteredTodos;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}